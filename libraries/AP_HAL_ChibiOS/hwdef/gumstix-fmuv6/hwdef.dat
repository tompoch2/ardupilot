###########################################################################################################################################################
# Gumstix FMU v6 Flight Controller
# Schematic https://github.com/gumstix/PKG900000001531/blob/master/hardware/PKG900000001531.pdf
# STM32H753IIT6
# 9x PWM / IO - DMA capable
# 3x IMUs (BMI088 6DOF, ICM20602 6DOF, ICM42605 6DOF)
# BMP388 Baro, BMM150 COMPASS, FRAM (256kb), SDCARD Socket
# 7x UARTs (PLUS 1 DISABLED), 1x CAN (PLUS 1 DISABLED), 1x EXT SPI (DISABLED), 3x EXT I2C
# Onboard RGB LED
###########################################################################################################################################################

# MCU class and specific type.
# I know its a 753 but I don't need the HW crypto so 743 should get things going
MCU STM32H7xx STM32H743xx

# board ID for firmware load
APJ_BOARD_ID 54

# crystal frequency
OSCILLATOR_HZ 24000000

FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O2

# start on 2th sector (1st sector for bootloader)
FLASH_RESERVE_START_KB 128

define HAL_STORAGE_SIZE 16384

# Need to switch system timer as default (TIM5) is used by PWM outputs
define STM32_ST_USE_TIMER 2

#------- USB setup --------------------
USB_STRING_MANUFACTURER "Gumstix"

# OTG1 and OTG2 are USB devices (1x physical USB connection enumerated as 2x logical ports)
# Now we define the pins that USB is connected on.
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# Port switching for USB HS and FS,high = USB_FS , LOW = USB_HS
#PH15 USB_HS_ENABLE OUTPUT HIGH
#define USB_HW_ENABLE_HS 0

# This is the pin that senses USB being connected. It is an input pin
# setup as OPENDRAIN.
PA9 VBUS INPUT OPENDRAIN

# This input pin is used to detect that power is valid on USB.
#PC0 VBUS_VALID INPUT PULLDOWN

# DEBUG TBC. PINS AS PER FMUV6X DRAFT
#PA13 JTMS-SWDIO SWD
#PA14 JTCK-SWCLK SWD

#-----------------Serial setup--------------------
SERIAL_ORDER OTG1 UART7 USART1 UART5 USART2 UART4 UART8 USART3 OTG2
#UART6 EXCLUDED FOR NOW

# USART 1 (GPS)
PB6 USART1_TX USART1
PB7 USART1_RX USART1

# USART2 (Telem 3)
PD5 USART2_TX USART2
PD6 USART2_RX USART2
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2

# USART3
PD8 USART3_TX USART3
PD9 USART3_RX USART3

# UART4
PH13 UART4_TX UART4
PH14 UART4_RX UART4

# UART5 (Telem 2)
PC12 UART5_TX UART5
PD2 UART5_RX UART5
PC9 UART5_CTS UART5
PC8 UART5_RTS UART5

# UART6
#not defined on H743 for some reason.  Need to check pin mapping.
# PC6 UART6_TX UART6
# Spektrum input
#PC7 UART6_RX UART6
#define HAL_SERIAL7_PROTOCOL SerialProtocol_RCIN

# UART7 (Telem 1)
PE8 UART7_TX UART7
PF6 UART7_RX UART7
PE10 UART7_CTS UART7
PF8 UART7_RTS UART7

# UART8 (GPS 2)
PE1 UART8_TX UART8
PE0 UART8_RX UART8

#--------------Sensor bus setup-----------------
#SPI1 ICM_20602
PG11 SPI1_SCK SPI1
PG9 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

#SPI2 ICM_42605
PI1 SPI2_SCK SPI2
PI2 SPI2_MISO SPI2
PI3 SPI2_MOSI SPI2

#SPI3 BMI088
PC10 SPI3_SCK SPI3
PC11 SPI3_MISO SPI3
PB2 SPI3_MOSI SPI3

#SPI5 FRAM
PF7 SPI5_SCK SPI5
PH7 SPI5_MISO SPI5
PF11 SPI5_MOSI SPI5

#SPI6 External, disabled to save DMA channels
#PG13 SPI6_SCK SPI6
#PA6 SPI6_MISO SPI6
#PG14 SPI6_MOSI SPI6

# PWM output for buzzer.  Need to add TIM14 support first.
#PF9 TIM14_CH2 TIM14 GPIO(9) ALARM

# RC Input set for Interrupt not DMA
PI5 TIM8_CH1 TIM8 RCININT FLOAT LOW

#GPIO(70) # also USART6_RX for serial RC

# Order of I2C buses
I2C_ORDER I2C4 I2C2 I2C3 I2C1

# this board has one internal I2C bus
define HAL_I2C_INTERNAL_MASK 1

# First I2C bus.
PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1

# I2C 2
PF1 I2C2_SCL I2C2
PF0 I2C2_SDA I2C2

# I2C 3
PA8 I2C3_SCL I2C3
PH8 I2C3_SDA I2C3

# I2C 4 (baro)
PF14 I2C4_SCL I2C4
PF15 I2C4_SDA I2C4

# CS pins for SPI sensors. The labels for all CS pins need to
# match the SPI device table later in this file.
PI9 ICM_20602_CS CS SPEED_VERYLOW
PG7 FRAM_CS CS SPEED_VERYLOW
PH5 ICM_42605_CS CS SPEED_VERYLOW
PI4 BMI088_ACCEL_CS CS
PI8 BMI088_GYRO_CS CS
#PG9 EXT1_CS CS
#PG9 EXT2_CS CS

# DRDY PINS
PF2 ICM_20602_DRDY INPUT
PA10 ICM42605_DRDY INPUT
PI6 BMI088_ACCEL_DRDY INPUT
PI7 BMI088_GYRO_DRDY INPUT
#PD11 EXT1_DRDY INPUT # EXTERNAL
#PD12 EXT2_DRDY INPUT # EXTERNAL

SPIDEV ramtron     SPI5 DEVID10 FRAM_CS           MODE3  8*MHZ  8*MHZ
SPIDEV bmi088_g    SPI3 DEVID1  BMI088_GYRO_CS    MODE3  5*MHZ  5*MHZ
SPIDEV bmi088_a    SPI3 DEVID2  BMI088_ACCEL_CS   MODE3  5*MHZ  5*MHZ
SPIDEV icm20608    SPI1 DEVID2  ICM_20602_CS      MODE3  2*MHZ  4*MHZ
SPIDEV icm42605    SPI2 DEVID1  ICM_42605_CS      MODE3  2*MHZ  4*MHZ

# 3 IMUs
IMU BMI088       SPI:bmi088_a SPI:bmi088_g ROTATION_NONE
IMU Invensense   SPI:icm20602 ROTATION_NONE
IMU Invensensev3 SPI:icm42605 ROTATION_NONE

define HAL_DEFAULT_INS_FAST_SAMPLE 7

# 1 baro on I2C4.  Two possible addresses.
BARO BMP388 I2C:0:0x76
#BARO BMP388 I2C:0:0x77

# 1 compass, address range 0x10 - 0x13. Try 0x10 to start with
COMPASS BMM150 I2C:0:0x10 false ROTATION_NONE

define HAL_PROBE_EXTERNAL_I2C_COMPASSES

#------------CAN setup-----------------

# CAN Busses
PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1

#CAN 2 TBC
#Cannot be used at same time as USB_HS on STM32H7xx
#PB12 CAN2_RX CAN2
#PB13 CAN2_TX CAN2

# CAN Silent Pin LOW Enable
#PF5 GPIO_CAN_SILENT OUTPUT PUSHPULL SPEED_LOW LOW GPIO(72)

#----------------PWM Output setup--------------------
# Now we start defining some PWM pins. We also map these pins to GPIO
# values, so users can set BRD_PWM_COUNT to choose how many of the PWM
# outputs are setup as PWM and how many as GPIOs.

PI0 TIM5_CH4 TIM5 PWM(1) GPIO(50)
PH12 TIM5_CH3 TIM5 PWM(2) GPIO(51)
PH11 TIM5_CH2 TIM5 PWM(3) GPIO(52)
PH10 TIM5_CH1 TIM5 PWM(4) GPIO(53)
PD13 TIM4_CH2 TIM4 PWM(5) GPIO(54)
PD14 TIM4_CH3 TIM4 PWM(6) GPIO(55)
PH6  TIM12_CH1 TIM12 PWM(7) GPIO(56) NODMA
PH9  TIM12_CH2 TIM12 PWM(8) GPIO(57) NODMA
# Can we make extra outputs?  Not at the moment - timer conflicts
#PA2 TIM2_CH3 TIM2 PWM(9) GPIO(58) # Heater pin
#PA1 TIM2_CH2 TIM2 PWM(10) GPIO(59) # Capture pin
#PA2 TIM5_CH3 TIM5 PWM(9) GPIO(58) # Heater pin
#PA1 TIM5_CH2 TIM5 PWM(10) GPIO(59) # Capture pin
PE11 TIM1_CH2 TIM1 PWM(11) GPIO(60) # Capture pin
#PI5 is PPM input but could be reassigned.
#PI5  TIM8_CH1 TIM8 PWM(12) GPIO(61)

define BOARD_PWM_COUNT_DEFAULT 8
define STM32_PWM_USE_ADVANCED TRUE

# RSSI Analog Input
#PC1 RSSI_IN ADC1

#-----------Power setup------------------
# Safety Switch Input.
PE6 SAFETY_IN INPUT PULLDOWN
define HAL_HAVE_SAFETY_SWITCH 1

# Battery Analog Sense Pins
PA4 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC2 BATT_CURRENT_SENS ADC1 SCALE(1)

# Now the VDD sense pin. This is used to sense primary board voltage.
PA0 VDD_5V_SENS ADC1 SCALE(2)
# Board has monitoring for sensor power rail.  Not enabled.
#PC4 VDD_3V3_SENS ADC1

# Now setup the default battery pins driver analog pins and default
# scaling for the power brick.
define HAL_BATT_VOLT_PIN 14
define HAL_BATT_CURR_PIN 15
define HAL_BATT_VOLT_SCALE 18.1
define HAL_BATT_CURR_SCALE 36.367515152

# Control of Spektrum power pin
PC7 SPEKTRUM_PWR OUTPUT LOW GPIO(70)
define HAL_GPIO_SPEKTRUM_PWR 70

# Spektrum Power is Active High
define HAL_SPEKTRUM_PWR_ENABLED 0

# Spektrum RC Input pin, used as GPIO for bind for Satellite Receivers
PB0 SPEKTRUM_RC INPUT PULLUP GPIO(71)
define HAL_GPIO_SPEKTRUM_RC 71

# Power Supply Enable
#PE3 VDD_3V3_SENSORS_EN OUTPUT LOW

# start peripheral power off, then enable after init
# this prevents a problem with radios that use RTS for
# bootloader hold.  Need to check these.
#PD11 VDD_5V_HIPOWER_EN OUTPUT HIGH
#PG4  VDD_5V_PERIPH_EN OUTPUT HIGH
#PG5  VDD_5V_RC_EN OUTPUT HIGH
#PG7  VDD_3V3_SD_CARD_EN OUTPUT HIGH
#PC5  VDD_3V3_PERIPH_EN OUTPUT HIGH

# Power flag pins: these tell the MCU the status of the various power
# supplies that are available. The pin names need to exactly match the
# names used in AnalogIn.cpp.
PB5 VDD_BRICK_VALID INPUT PULLDOWN
PG1  VDD_BRICK_nVALID INPUT PULLUP
PG2  VDD_BRICK2_nVALID INPUT PULLUP
PG0  VBUS_nVALID INPUT PULLUP
PJ3  VDD_5V_HIPOWER_nOC INPUT PULLUP
PJ4  VDD_5V_PERIPH_nOC INPUT PULLUP
PB10 nSPI5_RESET_EXTERNAL1 OUTPUT HIGH

#-----------------------LED Setup----------------
# Gumstix fmu v6 has a RGB LED similar to pixracer
define HAL_HAVE_PIXRACER_LED

define HAL_GPIO_LED_ON  0
define HAL_GPIO_LED_OFF 1

# Guess for LED setup
PE3 LED_R OUTPUT HIGH GPIO(0)
PE4 LED_G OUTPUT HIGH GPIO(1)
PE5 LED_B OUTPUT HIGH GPIO(2)

define HAL_GPIO_A_LED_PIN 0
define HAL_GPIO_B_LED_PIN 1
define HAL_GPIO_C_LED_PIN 2

#-----------File System setup--------------------

# microSD card
PB14 SDMMC2_D0 SDMMC1
PB15 SDMMC2_D1 SDMMC1
PB3 SDMMC2_D2 SDMMC1
PB4 SDMMC2_D3 SDMMC1
PC1 SDMMC2_CK SDMMC1
PD7 SDMMC2_CMD SDMMC1

# Enable RAMTROM parameter storage.
define HAL_WITH_RAMTRON 1

# Enable FAT filesystem support (needs a microSD defined via SDMMC).
define HAL_OS_FATFS_IO 1

# Now some defines for logging and terrain data files.
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"
